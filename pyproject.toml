[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent_stack"
version = "0.1.0"
description = "A modular AI orchestration framework enabling scalable, fault-tolerant, and intelligent task execution"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "AI Agent Stack Team" },
]
dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.1.0",
    "typer>=0.9.0",
    "rich>=13.4.1",
]

[project.optional-dependencies]
test = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.75.3",
]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "ruff>=0.0.270",
]
docs = [
    "sphinx>=7.0.1",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--asyncio-mode=auto --cov=agent_stack --cov-report=term-missing -v"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 88
target-version = "py38"

